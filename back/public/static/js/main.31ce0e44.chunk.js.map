{"version":3,"sources":["redux/actions/products.js","redux/reducers/products.js","redux/reducers/orders.js","redux/reducers/profile.js","redux/reducers/index.js","redux/store.js","components/layouts/MainLayout/index.js","components/screens/Home/index.js","components/screens/Login/index.js","helpers/fetch.js","components/screens/Products/view.js","components/screens/Products/index.js","components/screens/Orders/index.js","components/screens/Buy/index.js","routes.js","app.js","serviceWorker.js","index.js"],"names":["loadProducts","products","type","payload","setProductError","err","setProductLoading","addProduct","id","Date","now","price","Math","random","name","initialState","isLoading","error","list","reducer","state","action","console","log","date","data","email","role","combineReducers","orders","profile","createStore","rootReducer","MainLayout","className","to","this","props","children","Component","Home","Login","fetchApi","url","fetch","then","res","json","Products","renderList","map","product","key","add","setLoading","catch","setError","onClick","connectedProps","connect","ownProps","dispatch","bindActionCreators","Orders","Buy","Routes","exact","path","component","from","App","store","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31ce0e44.chunk.js","sourcesContent":["export const LOAD_PRODUCTS = 'mcga/LOAD_PRODUCTS'\r\nexport const SET_PRODUCT_ERROR = 'mcga/SET_PRODUCT_ERROR'\r\nexport const SET_PRODUCT_LOADING = 'mcga/SET_PRODUCT_LOADING'\r\nexport const ADD_PRODUCT = 'mcga/ADD_PRODUCT'\r\n\r\nexport const loadProducts = products => {\r\n    return {\r\n        type: LOAD_PRODUCTS,\r\n        payload: products\r\n    }\r\n}\r\n\r\nexport const setProductError = err => {\r\n    return {\r\n        type: SET_PRODUCT_ERROR,\r\n        payload: err\r\n    }\r\n}\r\n\r\nexport const setProductLoading = () => {\r\n    return {\r\n        type: SET_PRODUCT_LOADING\r\n    }\r\n}\r\n\r\nexport const addProduct = () => {\r\n    return {\r\n        type: ADD_PRODUCT,\r\n        payload: {\r\n            id: Date.now(),\r\n            price: Math.random()*100,\r\n            name: 'caramelos'\r\n        }\r\n    }\r\n}","import { ADD_PRODUCT, LOAD_PRODUCTS, SET_PRODUCT_ERROR, SET_PRODUCT_LOADING } from '../actions/products'\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    error: '',\r\n    list: []\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    console.log(action, state)\r\n    switch(action.type) {\r\n        case LOAD_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                list: action.payload,\r\n                error: null,\r\n                isLoading: false\r\n            }\r\n        case SET_PRODUCT_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                isLoading: false\r\n            }\r\n        case SET_PRODUCT_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case ADD_PRODUCT:\r\n            return {\r\n                ...state,\r\n                list: [\r\n                    ...state.list,\r\n                    action.payload\r\n                ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","const initialState = {\r\n    isLoading: false,\r\n    error: '',\r\n    list: [\r\n        { id: 1, date: '2019/11/14', products: [1, 3] },\r\n        { id: 2, date: '2019/11/10', products: [1] },\r\n        { id: 3, date: '2019/11/17', products: [2] }\r\n    ]\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","const initialState = {\r\n    isLoading: false,\r\n    error: '',\r\n    data: {\r\n        name: 'David Curras',\r\n        email: 'david.curras@uai.edu.ar',\r\n        role: 'client'\r\n    }\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","import { combineReducers } from 'redux'\r\nimport products from './products'\r\nimport orders from './orders'\r\nimport profile from './profile'\r\n\r\nexport default combineReducers({\r\n    products,\r\n    orders,\r\n    profile\r\n})","import { createStore } from 'redux'\r\nimport rootReducer from './reducers'\r\n\r\nexport default createStore(rootReducer)","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass MainLayout extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"MainLayout\">\r\n                <ul className=\"navbar\">\r\n                    <li><Link to=\"/home\">Home</Link></li>\r\n                    <li><Link to=\"/login\">Login</Link></li>\r\n                    <li><Link to=\"/products\">Products</Link></li>\r\n                    <li><Link to=\"/orders\">Orders</Link></li>\r\n                    <li><Link to=\"/buy\">Buy</Link></li>\r\n                </ul>\r\n                { this.props.children }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainLayout","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport MainLayout from '../../layouts/MainLayout'\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <MainLayout>\r\n                <h1>Home</h1>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport MainLayout from '../../layouts/MainLayout'\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        return (\r\n            <MainLayout>\r\n                <h1>Login</h1>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login\r\n","const fetchApi = url => {\r\n    return fetch('http://localhost:5000/api/'+url)\r\n        .then(res => res.json())\r\n}\r\n\r\nexport default fetchApi","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport MainLayout from '../../layouts/MainLayout'\r\nimport fetchApi from '../../../helpers/fetch'\r\n\r\nclass Products extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setLoading()\r\n        fetchApi('/product')\r\n            .then(data => this.props.loadProducts(data))\r\n            .catch(err => this.props.setError(err))\r\n    }\r\n\r\n    renderList = () => {\r\n        return this.props.products.map(product => {\r\n            return <li key={product.id}>Name: {product.name}</li>\r\n        })\r\n    }\r\n\r\n    add = () => {\r\n        this.props.addProduct()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MainLayout>\r\n                <h1>Products {this.props.isLoading ? 'loading...' : null}</h1>\r\n                <h2>{this.props.error}</h2>\r\n                <ul>\r\n                    {this.renderList()}\r\n                </ul>\r\n                <button onClick={this.add}>Add</button>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Products\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport {\r\n    loadProducts,\r\n    setProductError,\r\n    setProductLoading,\r\n    addProduct\r\n} from '../../../redux/actions/products'\r\nimport Products from './view'\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        products: state.products.list,\r\n        isLoading: state.products.isLoading,\r\n        error: state.products.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators(\r\n        {\r\n            loadProducts,\r\n            setError: setProductError,\r\n            setLoading: setProductLoading,\r\n            addProduct\r\n        },\r\n        dispatch\r\n    )\r\n}\r\n\r\nconst connectedProps = connect(mapStateToProps, mapDispatchToProps)\r\nexport default connectedProps(Products)","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport MainLayout from '../../layouts/MainLayout'\r\n\r\nclass Orders extends Component {\r\n    render() {\r\n        return (\r\n            <MainLayout>\r\n                <h1>Orders</h1>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Orders\r\n","import './style.css'\r\nimport React, { Component } from 'react'\r\nimport MainLayout from '../../layouts/MainLayout'\r\n\r\nclass Buy extends Component {\r\n    render() {\r\n        return (\r\n            <MainLayout>\r\n                <h1>Buy</h1>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Buy\r\n","import React, { Component } from 'react'\r\nimport {\r\n    BrowserRouter,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom'\r\nimport Home from './components/screens/Home'\r\nimport Login from './components/screens/Login'\r\nimport Products from './components/screens/Products'\r\nimport Orders from './components/screens/Orders'\r\nimport Buy from './components/screens/Buy'\r\n\r\nclass Routes extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path=\"/home\" component={Home} />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/products\" component={Products} />\r\n                    <Route exact path=\"/orders\" component={Orders} />\r\n                    <Route exact path=\"/buy\" component={Buy} />\r\n                    <Redirect from=\"/\" to=\"/home\" />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routes","import React, { Component } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport Routes from './routes'\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <Routes />\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './reset.css'\nimport './index.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}